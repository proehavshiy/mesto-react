{"version":3,"sources":["images/Mesto-logo.svg","components/header/Header.js","components/card/Card.js","components/main/Main.js","components/footer/Footer.js","components/popup_with_form/PopupWithForm.js","components/popup_with_image/popupWithImage.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logoPath","alt","Card","cards","onCardClick","map","card","link","name","onClick","type","aria-label","likes","length","_id","Main","onEditProfile","onAddPlace","onEditAvatar","userName","userDescription","userAvatar","style","backgroundImage","Footer","PopupWithForm","title","submitText","isOpen","onClose","children","togglePopupState","action","method","noValidate","autoComplete","value","PopupWithImage","apiConnection","serverUrl","cohort","token","this","_serverUrl","_cohort","_token","requests","promises","Promise","all","fetch","headers","authorization","then","response","ok","json","reject","status","newName","newAbout","body","JSON","stringify","about","cardId","newAvatarLink","avatar","App","React","useState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","closeAllPopups","handleClickClose","evt","target","classList","contains","useEffect","document","addEventListener","setUserName","setUserDescription","setUserAvatar","setCards","getPromiseAll","getUserInfo","getCards","serverData","catch","err","console","log","state","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d303be8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mesto-logo.5f3664ca.svg\";","import logoPath from '../../images/Mesto-logo.svg';\r\n\r\nfunction Header() {\r\n  return(\r\n    <header className=\"header page__section page__header\">\r\n      <img className=\"logo\" src={logoPath} alt=\"логотип Место\" />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","function Card({cards, onCardClick}) {\n  //для определения наличия CSS-класса видимости\n  //и задания адреса изображения в теге img\n  return(\n    cards.map((card)=>{\n      return(\n        <figure className=\"element\" key={card._id}>\n          <img className=\"element__image\" src={card.link} alt={card.name} onClick={()=>{onCardClick(card)}} />\n          <button className=\"element__button-delete page__button\" type=\"button\" aria-label=\"Удалить карточку\" />\n          <figcaption className=\"element__figcaption\">\n            <h2 className=\"element__card-title\">\n            {card.name}\n            </h2>\n            <div className=\"element__like-section\">\n              <button className=\"element__button-like page__button\" type=\"button\" />\n              <p className=\"element__like-counter\">\n              {card.likes.length}\n              </p>\n            </div>\n          </figcaption>\n        </figure>\n      )\n    })\n  )\n\n}\n\n\nexport default Card;\n","import Card from '../card/Card'\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, userName, userDescription, userAvatar, cards, onCardClick}) {\n  return(\n    <main className=\"content\">\n      <section className=\"profile page__section page__profile\">\n        <div className=\"profile__avatar avatar-form-open-button\" style={{backgroundImage: `url(${userAvatar})`}} onClick={onEditAvatar}/>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__title\">\n            {userName}\n          </h1>\n          <button className=\"profile__change-button page__button profile-form-open-button\" onClick={onEditProfile} type=\"button\" aria-label=\"Кнопка Редактировать профиль\" />\n          <p className=\"profile__subtitle\">\n            {userDescription}\n          </p>\n        </div>\n        <button className=\"profile__add-button page__button add-card-form-open-button\" onClick={onAddPlace} type=\"button\" aria-label=\"Кнопка Добавить карточку\" />\n      </section>\n      <section className=\"elements page__section\">\n        <Card cards={cards} onCardClick={onCardClick}/>\n      </section>\n    </main>\n  )\n}\nexport default Main;\n","function Footer() {\r\n  return(\r\n    <footer className=\"footer page__section\">\r\n      <p className=\"footer__copyright\">\r\n        © 2021 Mesto Russia\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm({name, title, submitText, isOpen, onClose, children}) {\r\n  const togglePopupState = isOpen ? 'popup__flexed popup_opened' : 'popup__flexed';\r\n\r\n  return(\r\n    <div className={`popup popup_${name} ${togglePopupState}`} onClick={onClose}>\r\n     <div className={`popup__container popup__container_form popup__container_${name}`}>\r\n       <button className={`popup__button-close popup__button-close_${name} page__button`}  aria-label=\"Кнопка Закрыть форму\" type=\"button\" />\r\n       <form className=\"popup__form\" action=\"#\" method=\"POST\" name={`${name}-form`} noValidate autoComplete=\"off\">\r\n         <h2 className=\"popup__heading\">\r\n           {title}\r\n         </h2>\r\n        {children}\r\n         <button className={`popup__button-save popup__button-save_${name} page__button`} type=\"submit\" value=\"Отправить на сервер\" aria-label=\"Кнопка Сохранить форму\">\r\n           {submitText}\r\n         </button>\r\n       </form>\r\n     </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;\r\n","function PopupWithImage({card, onClose}) {\r\n  const togglePopupState = card ?'popup__flexed popup_opened' : 'popup__flexed';\r\n  return(\r\n    <div className={`popup popup_open-image ${togglePopupState}`} onClick={onClose}>\r\n      <div className=\"popup__container popup__container_open-image\">\r\n        {card ? (\r\n          <>\r\n          <button className=\"popup__button-close popup__button-close_open-image page__button\"  type=\"button\" aria-label=\"закрыть изображение\" />\r\n          <figure className=\"popup__figure\">\r\n            <img className=\"popup__image\" src={card.link} alt={`картинка: ${card.name}`} />\r\n            <figcaption className=\"popup__figcaption\">\r\n              {card.name}\r\n            </figcaption>\r\n          </figure>\r\n          </>\r\n        ) : ''}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default PopupWithImage;\r\n\r\n","class Api {\r\n  constructor({ serverUrl, cohort, token, }) {\r\n    this._serverUrl = serverUrl; // https://mesto.nomoreparties.co/v1\r\n    //this._requestPath = requestPath; // меняется постоянно напр: users/me\r\n    this._cohort = cohort; // cohort-22\r\n    this._token = token; // a039ff03-9c34-4fce-91e0-77cd409474e3\r\n  }\r\n  //метод для единого вызова методов серверных запросов\r\n  getPromiseAll(...requests) {\r\n    const promises = [...requests]\r\n    //console.log(\"Promise.all - массив изначальный\",promises);\r\n    return Promise.all(promises)\r\n  }\r\n  //запрос информации профиля с сервера\r\n  getUserInfo() {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/users/me`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`Ошибка ${response.status}`)\r\n    });\r\n  }\r\n  //запрос карточек с сервера\r\n  getCards() {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/cards`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    }).then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`Ошибка ${response.status}`)\r\n    });\r\n  }\r\n  //отправка на сервер новых данных пользователя\r\n  //Метод PATCH обычно используют для обновления сущностей, уже существующих на сервере\r\n  sendUserInfo({ newName, newAbout }) {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: newName,\r\n        about: newAbout\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`ошибка ${response.status}`)\r\n    })\r\n  }\r\n  //добавление новой карточки на сервер\r\n  sendNewCard({ name, link }) {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name, //название карточки\r\n        link: link //ссылка на картинку\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`ошибка ${response.status}`)\r\n    })\r\n  }\r\n  //добавление новой карточки на сервер\r\n  deleteCard(cardId) {\r\n    //{ name, link },\r\n    return fetch(`${this._serverUrl}/${this._cohort}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        //name: name, //название карточки\r\n        //link: link, //ссылка на картинку\r\n        _id: cardId\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`ошибка ${response.status}`)\r\n    })\r\n  }\r\n  //добавить лайк карточки\r\n  addLikeCard({ cardId, likes }) {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        _id: cardId,\r\n        likes: likes\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`ошибка ${response.status}`)\r\n    })\r\n  }\r\n  deleteLikeCard({ cardId, likes }) {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        _id: cardId,\r\n        likes: likes\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`ошибка ${response.status}`)\r\n    })\r\n  }\r\n  //Обновление аватара пользователя\r\n  sendUserAvatar({ newAvatarLink }) {\r\n    return fetch(`${this._serverUrl}/${this._cohort}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: newAvatarLink\r\n      })\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`ошибка ${response.status}`)\r\n    })\r\n  }\r\n}\r\n\r\nconst apiConnection = new Api({\r\n  serverUrl: 'https://mesto.nomoreparties.co/v1',\r\n  cohort: 'cohort-22',\r\n  token: 'a039ff03-9c34-4fce-91e0-77cd409474e3'\r\n})\r\n\r\nexport default apiConnection;\r\n","import React from 'react';\r\nimport Header from './header/Header'\r\nimport Main from './main/Main'\r\nimport Footer from './footer/Footer'\r\nimport PopupWithForm from './popup_with_form/PopupWithForm'\r\nimport PopupWithImage from './popup_with_image/popupWithImage'\r\nimport apiConnection from '../utils/api'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState();\r\n  //обработчики открытия-закрытия попапов с формой\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  //попап с картинкой\r\n  function handleCardClick(state) {\r\n    setSelectedCard(state);\r\n  }\r\n  //console.log('selectedCard', selectedCard)\r\n  //закрытие попапа\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n  //закрытие по Esc попапов\r\n  React.useEffect(()=> {\r\n    document.addEventListener('keyup',closeAllPopups);\r\n  },[])\r\n  //колбэк закрытия по крестику и полю вне формы\r\n  function handleClickClose(evt) {\r\n    (evt.target.classList.contains('popup_opened') ||\r\n    evt.target.classList.contains('popup__button-close')) && (closeAllPopups());\r\n  }\r\n\r\n  //получаем инфо о профиле и карточки с сервера\r\n  const [userName, setUserName] = React.useState();\r\n  const [userDescription, setUserDescription ] = React.useState();\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(()=> {\r\n    apiConnection.getPromiseAll(apiConnection.getUserInfo(), apiConnection.getCards())\r\n    .then(serverData => {\r\n      //console.log(\"Promise.all - массив результат\", serverData)\r\n      setUserName(serverData[0].name);\r\n      setUserDescription(serverData[0].about);\r\n      setUserAvatar(serverData[0].avatar);\r\n      setCards(serverData[1]);\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Promise.all - ошибка\", err)\r\n    })\r\n  },[])//[] пустой массив в зависимости, чтобы запрос к Api был 1 раз при первонач рендере\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"page\">\r\n       <Header/>\r\n       <Main\r\n       onEditProfile={handleEditProfileClick}\r\n       onAddPlace={handleAddPlaceClick}\r\n       onEditAvatar={handleEditAvatarClick}\r\n       userName={userName}\r\n       userDescription={userDescription}\r\n       userAvatar={userAvatar}\r\n       cards={cards}\r\n       onCardClick={handleCardClick}/>\r\n       <Footer />\r\n       <PopupWithForm\r\n       name=\"change-profile\"\r\n       title=\"Редактировать профиль\"\r\n       submitText={'Сохранить'}\r\n       isOpen={isEditProfilePopupOpen}\r\n       onClose={handleClickClose}>\r\n        <fieldset className=\"popup__profile-information\">\r\n          <section className=\"popup__input-section\">\r\n            <input className=\"popup__input popup__input_profile-name\" type=\"text\" name=\"profile-name\"  placeholder=\"Имя\" required minLength={2} maxLength={40} />\r\n            <span className=\"popup__input-error popup__input-error_type_profile-name\" />\r\n          </section>\r\n          <section className=\"popup__input-section\">\r\n            <input className=\"popup__input popup__input_profile-signing\" type=\"text\" name=\"profile-signing\"  placeholder=\"Подпись\" required minLength={2} maxLength={200} />\r\n            <span className=\"popup__input-error popup__input-error_type_profile-signing\" />\r\n          </section>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithForm\r\n        name=\"add-card\"\r\n        title=\"Новое место\"\r\n        submitText={'Сохранить'}\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={handleClickClose}>\r\n          <fieldset className=\"popup__profile-information\">\r\n            <section className=\"popup__input-section\">\r\n              <input className=\"popup__input popup__input_location-name\" type=\"text\" name=\"location-name\"  placeholder=\"Название\" required minLength={2} maxLength={30} />\r\n              <span className=\"popup__input-error popup__input-error_type_location-name\" />\r\n            </section>\r\n            <section className=\"popup__input-section\">\r\n              <input className=\"popup__input popup__input_image-link\" type=\"url\" name=\"image-link\"  placeholder=\"Ссылка на картинку\" required />\r\n              <span className=\"popup__input-error popup__input-error_type_image-link\" />\r\n            </section>\r\n            </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithForm\r\n        name=\"confirm-deletion\"\r\n        title=\"Вы уверены?\"\r\n        submitText={'Да'}>\r\n        </PopupWithForm>\r\n        <PopupWithForm\r\n        name=\"avatar\"\r\n        title=\"Обновить аватар\"\r\n        submitText={'Сохранить'}\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={handleClickClose}>\r\n          <fieldset className=\"popup__profile-information\">\r\n            <section className=\"popup__input-section\">\r\n              <input className=\"popup__input popup__input_image-link\" type=\"url\" name=\"image-link\"  placeholder=\"Ссылка на картинку\" required />\r\n              <span className=\"popup__input-error popup__input-error_type_image-link\" />\r\n            </section>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithImage\r\n        card={selectedCard}\r\n        onClose={handleClickClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}